syntax = "proto3";
package protocol;

service Hosts {
  rpc List(HostListReq) returns (HostListRes) {}
  rpc Add(HostAddReq) returns (HostAddRes) {}
  rpc Remove(HostRemoveReq) returns (HostRemoveRes) {}
  rpc SetStatus(HostSetStatusReq) returns (HostSetStatusRes) {}
}

service Rules {
  rpc Add(RuleAddReq) returns (RuleAddRes) {}
  rpc Clear(RuleClearReq) returns (RuleClearRes) {}
}

message HostListReq {}
message HostListRes {
  repeated Host hosts = 1;
}

message HostAddReq {
  string name = 1;
  bool allocateIPv4 = 2;
}
message HostAddRes {
  Host host = 1;
}

message HostRemoveReq {
  string id = 1;
}
message HostRemoveRes {}

message HostSetStatusReq {
  string id = 1;
  bool up = 2;
}
message HostSetStatusRes {}

message RuleAddReq {
  Protocol protocol = 1;
  string srcHostId = 2;
  int32 srcPort = 3;
  string dstIp = 4;
  int32 dstPort = 5;
}
message RuleAddRes {}

message RuleClearReq {
  string hostId = 1;
}
message RuleClearRes {}

message Host {
  string id = 1;
  string name = 2;

  repeated string ipv4 = 3;
  repeated string ipv6 = 4;

  bool up = 5;
}

enum Protocol {
  UNSET=0;
  TCP=1;
  UDP=2;
}
